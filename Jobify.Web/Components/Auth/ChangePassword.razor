@page "/Auth/ChangePassword"
@using System.ComponentModel.DataAnnotations
@using Jobify.Api.DTOs
@using Jobify.Api.Service
@inject ApiService ApiService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Change password</PageTitle>
<h3>Change password</h3>

<div class="row">
    <div class="col-md-4">
        <section>
            <EditForm Model="UserChangePasswordDto" OnValidSubmit="ChangeOldPassword">
                <DataAnnotationsValidator />
                <div class="form-floating mb-3">
                    <InputText @bind-Value="UserChangePasswordDto.Email" class="form-control" aria-required="true" />
                    <label for="email" class="form-label">Email</label>
                    <ValidationMessage For="() => UserChangePasswordDto.Email" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="UserChangePasswordDto.Password" class="form-control" aria-required="true" />
                    <label for="password" class="form-label">Password</label>
                    <ValidationMessage For="() => UserChangePasswordDto.Password" class="text-danger" />
                </div>                
                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="UserChangePasswordDto.ConfirmPassword" class="form-control" aria-required="true" />
                    <label for="password" class="form-label">Password</label>
                    <ValidationMessage For="() => UserChangePasswordDto.ConfirmPassword" class="text-danger" />
                </div>
                <button type="submit" class="w-100 btn btn-lg btn-primary">Change Password</button>
            </EditForm>
        </section>
    </div>
</div>

@code {
    private UserChangePasswordDto UserChangePasswordDto { get; set; } = new UserChangePasswordDto();

    private async Task ChangeOldPassword()
    {
        try
        {
            var response = await ApiService.ChangePasswordAsync(UserChangePasswordDto);
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/Auth/Login", forceLoad: false);
                Navigation.Refresh();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error logging in: {ex.Message}");
        }
    }
}
