@page "/Auth/Users"
@using System.ComponentModel.DataAnnotations
@using Jobify.Api.DTOs
@using Jobify.Api.Service
@inject ApiService ApiService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Users</PageTitle>

<h3>Users</h3>

<div class="d-flex justify-content-between">
    <div class="ms-auto">
        <button class="btn btn-success" @onclick="NavigateToAddUser">Add User</button>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Surname</th>
            <th>Email</th>
            <th>User Type</th>
            <th>Email Verified</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>@user.Name</td>
                <td>@user.Surname</td>
                <td>@user.Mail</td>
                <td>@user.UserType.Name</td>
                <td>@(user.IsEmailVerified ? "Yes" : "No")</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => EditUser(user.Id)">Edit</button>
                    <button class="btn btn-danger" @onclick="() => DeleteUser(user.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>



@code {
    private List<UserDTO> users = new List<UserDTO>();
    private UserDTO currentUser = new UserDTO();

    protected override async Task OnInitializedAsync()
    {
        users = await ApiService.GetUsers();
    }

    private void NavigateToAddUser()
    {
        Navigation.NavigateTo("/Auth/Users/Add", forceLoad: false);
        Navigation.Refresh();
    }

    private void EditUser(int userId)
    {
        Navigation.NavigateTo($"/Auth/Users/Edit/{userId}", forceLoad: false);
        Navigation.Refresh();
    }

    private async Task DeleteUser(int userId)
    {
        var isDeleted = await ApiService.DeleteUser(userId);

        if (isDeleted)
        {
            var userToDelete = users.FirstOrDefault(u => u.Id == userId);
            if (userToDelete != null)
            {
                users.Remove(userToDelete);
            }
        }
        else
        {
            Console.WriteLine("Failed to delete the user.");
        }
    }
}
