@page "/employer/deletejob"
@using Jobify.BL.Providers
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime

<Toasts class="p-3" Messages="messages" AutoHide="true" Delay="4000" StackLength="3" Placement="ToastsPlacement.BottomRight" />
<ConfirmDialog @ref="dialog" />

<PageTitle>Delete Job</PageTitle>

<h3>DeleteJob</h3>

@* 
<EditForm Model="jobAds" OnValidSubmit="HandleValidSubmit" FormName="jobAds">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <div class="form-group">
            <label for="jobAds">Job Ad to delete:</label>
            <InputSelect id="jobAds" class="form-control" @bind-Value="jobAd.Id">
                @foreach (var jobAd in jobAds)
                {
                    <option value="@jobAd.Id">@jobAd.Title</option>
                }
            </InputSelect>
        </div>
    </div>

</EditForm> *@

<div class="container">
    <div class="row">
        <div class="col-3">
            <label for="jobAdDelete">Job Ad to Delete:</label>
        </div>
            <div class="row">
        <div class="col-3">
            <select class="form-select mt-1" id="jobAdDelete" @bind="selectedJobAdId">
                <option value="0">All Job Ads</option>
                @foreach (var jobAd in jobAds)
                {
                    <option value="@jobAd.Id">@jobAd.Title</option>
                }
            </select>
        </div>
        <div class="col-1">
            <button class="btn btn-danger mt-1" @onclick="HandleValidSubmit">Delete</button>
                </div>
            </div>
        </div>
</div>

@code {
    List<ToastMessage> messages = new List<ToastMessage>();
    private ConfirmDialog dialog = default!;

    private List<JobAd> jobAds = new List<JobAd>();
    private JobAd jobAdToDelete;
    private int selectedJobAdId;

    protected override async Task OnInitializedAsync()
    {
        LoadJobAds();
    }

    private void LoadJobAds()
    {
        jobAds = DbQueryProvider.Service.GetAllJobAds();
    }

    private ToastMessage CreateToastMessage(ToastType toastType, string message, string title = null) => new ToastMessage
        {
            Type = toastType,
            Title = title,
            Message = $"{message}{Environment.NewLine}{DateTime.Now}",
        };

    private async Task HandleValidSubmit()
    {
        jobAdToDelete = jobAds.FirstOrDefault(j => j.Id == selectedJobAdId);
        var isConfirmed = await dialog.ShowAsync("Delete Job Ad", "Are you sure you want to delete this job ad?");
        if (jobAdToDelete is not null && isConfirmed)
        {
            DbQueryProvider.Service.DeleteJobAd(jobAdToDelete.Id);
            jobAds.Remove(jobAdToDelete);
            LoadJobAds();
            messages.Add(CreateToastMessage(ToastType.Success, "Job Ad deleted successfully!"));
        }
    }
}
